jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - name: "mipsel-unknown-linux-musl"
            triplet: "mipsel-linux-musl"
    steps:
      - uses: actions/checkout@v4

      # 安装 Rust 工具链和 MIPS 交叉编译依赖
      - name: Setup Rust and Toolchain
        run: |
          rustup target add ${{ matrix.target.name }}
          sudo apt-get update
          sudo apt-get install -y gcc-mipsel-linux-gnu

      # 配置 OpenSSL 交叉编译环境（关键）
      - name: Build OpenSSL
        run: |
          git clone https://github.com/openssl/openssl.git
          cd openssl
          ./Configure linux-mipsel --cross-compile-prefix=mipsel-linux-gnu- --prefix=/usr/mipsel-linux-gnu no-shared
          make -j$(nproc)
          sudo make install

      # 设置 OpenSSL 环境变量
      - name: Set OpenSSL ENV
        env:
          OPENSSL_DIR: /usr/mipsel-linux-gnu
        shell: bash
        run: |
          echo "CARGO_TARGET_${{{ matrix.target.triplet | upper }}}_LINKER=mipsel-linux-gnu-gcc" >> $GITHUB_ENV
          echo "OPENSSL_STATIC=1" >> $GITHUB_ENV
          echo "OPENSSL_DIR=$OPENSSL_DIR" >> $GITHUB_ENV
          echo "TARGET_CC=mipsel-linux-gnu-gcc" >> $GITHUB_ENV

      # 编译 Vaultwarden
      - name: Build Vaultwarden
        run: |
          cargo build --release --target ${{ matrix.target.name }}
          strip ./target/${{ matrix.target.name }}/release/vaultwarden

      # 打包二进制
      - name: Package Artifact
        run: |
          mkdir -p release
          cp ./target/${{ matrix.target.name }}/release/vaultwarden release/
          tar -czvf vaultwarden-mipsel.tar.gz -C release .
        if: success()

      # 上传编译产物
      - uses: actions/upload-artifact@v3
        with:
          name: vaultwarden-mipsel
          path: vaultwarden-mipsel.tar.gz
